name: Build and push image to AWS ECR.
on: push

env:
  ecr_name: editorjs-ecr

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      id: aws-credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Create ECR with CDK
      env:
        ECR_REPOSITORY: ${{ env.ecr_name }}
      run: |
        cd infra
        npm install
        npm ci
        npm install -g aws-cdk
        cdk synth
        cdk bootstrap
        cdk deploy editorjs-ecr --require-approval never

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ecr_name }}
        IMAGE_TAG: editorjs-image #${{ github.sha }}
      run: |
        cd lambda/editorjs
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
        docker build -t $ECR_REPOSITORY .
        docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
    
    - name: Create Lambda Funtion with CDK
      run: |
        cd infra
        cdk deploy editorjs-function --require-approval never